{"ast":null,"code":"var _jsxFileName = \"/home/addy/Desktop/4th/DASS/ass2/boilerplate/mern-stack-boilerplate/frontend/src/components/addorder.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction updateProduct(produc) {\n  console.log(\"function called\");\n  const name = localStorage.getItem('userid');\n  const prod = {\n    name: name,\n    product: produc\n  };\n  axios.post('http://localhost:4000/product/update', prod).then(response => {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  window.location = '/showproduct';\n}\n\nexport default class Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Products: [],\n      Query: [],\n      SearchString: ''\n    };\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangeSearch(event) {\n    this.setState({\n      SearchString: event.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.SearchString);\n    this.setState({\n      SearchString: '',\n      Query: []\n    });\n\n    if (this.state.SearchString.length > 1) {\n      console.log(this.SearchString);\n\n      for (let i = 0; i < this.state.Products.length; i++) {\n        if (this.state.Products[i].Name == this.state.SearchString) {\n          //check if room is already in the result\n          this.state.Query.push(this.state.Products);\n        }\n      }\n\n      console.log(this.Query);\n    } //window.location = '/';\n\n  }\n\n  componentDidMount() {\n    const prod1 = {\n      name: localStorage.getItem('userid')\n    };\n    axios.post('http://localhost:4000/product/showall', prod1).then(response => {\n      this.setState({\n        Products: response.data\n      });\n      this.setState({\n        Query: response.data\n      });\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Name Of Product: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.SearchString,\n      onChange: this.onChangeSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Bundle Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Bundle Cost\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Left\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.Query.map((currentproduct, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, currentproduct.Name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, currentproduct.BundleQuantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, currentproduct.BundleCost), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, currentproduct.BundleQuantity - currentproduct.DispatchQuantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => updateProduct(currentproduct.Name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Place Order\")));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/addy/Desktop/4th/DASS/ass2/boilerplate/mern-stack-boilerplate/frontend/src/components/addorder.js"],"names":["React","Component","Button","axios","updateProduct","produc","console","log","name","localStorage","getItem","prod","product","post","then","response","catch","error","window","location","Orders","constructor","props","state","Products","Query","SearchString","onChangeSearch","bind","onSubmit","event","setState","target","value","e","preventDefault","length","i","Name","push","componentDidMount","prod1","data","render","map","currentproduct","BundleQuantity","BundleCost","DispatchQuantity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\n\n\nfunction updateProduct(produc) {\n    console.log(\"function called\")\n    const name = localStorage.getItem('userid')\n    const prod = { name: name, product: produc }\n    axios.post('http://localhost:4000/product/update', prod)\n        .then(response => {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n\n    window.location = '/showproduct';\n}\n\n\nexport default class Orders extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Products: [],\n            Query: [],\n            SearchString: '',\n        }\n\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangeSearch(event) {\n        this.setState({ SearchString: event.target.value });\n    }\n\n    onSubmit(e) {\n\n        e.preventDefault();\n\n        console.log(this.SearchString);\n\n\n\n        this.setState({\n            SearchString: '',\n            Query: [],\n        });\n        if (this.state.SearchString.length > 1) {\n            console.log(this.SearchString)\n            for (let i = 0; i < this.state.Products.length; i++) {\n                if (this.state.Products[i].Name == (this.state.SearchString)) {\n                    //check if room is already in the result\n                    this.state.Query.push(this.state.Products);\n                }\n\n            }\n            console.log(this.Query)\n        }\n\n        //window.location = '/';\n    }\n\n\n    componentDidMount() {\n        const prod1 = { name: localStorage.getItem('userid') }\n        axios.post('http://localhost:4000/product/showall', prod1)\n            .then(response => {\n                this.setState({ Products: response.data });\n                this.setState({ Query: response.data });\n                console.log(response)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n\n    render() {\n\n\n        return (\n            \n            <div>\n                <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Name Of Product: </label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.SearchString}\n                        onChange={this.onChangeSearch}\n                    />\n                </div>\n                <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\n                    </div>\n            </form>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Bundle Quantity</th>\n                            <th>Bundle Cost</th>\n                            <th>Left</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.Query.map((currentproduct, i) => {\n                                return (\n                                    <tr>\n                                        <td>{currentproduct.Name}</td>\n                                        <td>{currentproduct.BundleQuantity}</td>\n                                        <td>{currentproduct.BundleCost}</td>\n                                        <td>{currentproduct.BundleQuantity - currentproduct.DispatchQuantity}</td>\n                                        <td><Button variant=\"danger\" onClick={() => updateProduct(currentproduct.Name)}>Place Order</Button></td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}