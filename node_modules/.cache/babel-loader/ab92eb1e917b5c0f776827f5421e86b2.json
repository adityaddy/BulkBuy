{"ast":null,"code":"var _jsxFileName = \"/home/addy/Desktop/4th/DASS/ass2/boilerplate/mern-stack-boilerplate/frontend/src/components/showproduct.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction updateProduct(produc) {\n  console.log(\"function called\");\n  const name = localStorage.getItem('userid');\n  const prod = {\n    name: name,\n    product: produc\n  };\n  axios.post('http://localhost:4000/product/update', prod).then(response => {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n  window.location = '/showproduct';\n}\n\nexport default class ShowProduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    const prod1 = {\n      name: localStorage.getItem('userid')\n    };\n    axios.post('http://localhost:4000/product/showproducts', prod1).then(response => {\n      this.setState({\n        products: response.data\n      });\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Bundle Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Bundly Cost\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.products.map((currentproduct, i) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, currentproduct.Name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, currentproduct.BundleQuantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, currentproduct.BundleCost), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => updateProduct(currentproduct.Name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Delete\")));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/addy/Desktop/4th/DASS/ass2/boilerplate/mern-stack-boilerplate/frontend/src/components/showproduct.js"],"names":["React","Component","Button","axios","updateProduct","produc","console","log","name","localStorage","getItem","prod","product","post","then","response","catch","error","window","location","ShowProduct","constructor","props","state","products","componentDidMount","prod1","setState","data","render","map","currentproduct","i","Name","BundleQuantity","BundleCost"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button} from 'react-bootstrap';\nimport axios from 'axios';\n\n\n\nfunction updateProduct(produc){\n    console.log(\"function called\")\n    const name = localStorage.getItem('userid')\n    const prod = {name: name,product:produc}\n    axios.post('http://localhost:4000/product/update',prod)\n         .then(response => {\n             console.log(response);\n         })\n         .catch(function(error) {\n             console.log(error);\n         })\n\n         window.location = '/showproduct';\n}\n\n\nexport default class ShowProduct extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {products: []}\n    }\n\n\n    componentDidMount() {\n        const prod1 = {name:localStorage.getItem('userid')}\n        axios.post('http://localhost:4000/product/showproducts',prod1)\n             .then(response => {\n                 this.setState({products: response.data});\n                 console.log(response)\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n \n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Bundle Quantity</th>\n                            <th>Bundly Cost</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.products.map((currentproduct, i) => {\n                            return (\n                                <tr>\n                                    <td>{currentproduct.Name}</td>\n                                    <td>{currentproduct.BundleQuantity}</td>\n                                    <td>{currentproduct.BundleCost}</td>\n                                    <td><Button variant=\"danger\" onClick={() => updateProduct(currentproduct.Name)}>Delete</Button></td>\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}